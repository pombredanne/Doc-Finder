@mixin border-radius($val, $horizontal:'', $vertical:''){
	@if($horizontal == ''){
		-webkit-border-radius: $val;
		-moz-border-radius: $val;
		border-radius: $val;
	}@else if($vertical == ''){
	}@else{
		-webkit-border-#{$horizontal}-#{$vertical}-radius: $val;
		-moz-border-radius-#{$horizontal}#{$vertical}: $val;
		border-#{$horizontal}-#{$vertical}-radius: $val;
	}

	-webkit-background-clip: padding-box;
	-moz-background-clip: padding;
	background-clip: padding-box;
}

@mixin box-shadow($val1, $val2:'', $val3:'', $val4:'', $val5:'', $val6:''){
	@if($val6 != ''){
		-webkit-box-shadow: $val1, $val2, $val3, $val4, $val5, $val6;
		-moz-box-shadow: $val1, $val2, $val3, $val4, $val5, $val6;
		box-shadow: $val1, $val2, $val3, $val4, $val5, $val6;
	}@else if($val5 != ''){
		-webkit-box-shadow: $val1, $val2, $val3, $val4, $val5;
		-moz-box-shadow: $val1, $val2, $val3, $val4, $val5;
		box-shadow: $val1, $val2, $val3, $val4, $val5;
	}@else if($val4 != ''){
		-webkit-box-shadow: $val1, $val2, $val3, $val4;
		-moz-box-shadow: $val1, $val2, $val3, $val4;
		box-shadow: $val1, $val2, $val3, $val4;
	}@else if($val3 != ''){
		-webkit-box-shadow: $val1, $val2, $val3;
		-moz-box-shadow: $val1, $val2, $val3;
		box-shadow: $val1, $val2, $val3;
	}@else if($val2 != ''){
		-webkit-box-shadow: $val1, $val2;
		-moz-box-shadow: $val1, $val2;
		box-shadow: $val1, $val2;
	}@else if($val1 != ''){
		-webkit-box-shadow: $val1;
		-moz-box-shadow: $val1;
		box-shadow: $val1;
	}
}

@mixin transition($val){
	-webkit-transition: $val;
	-moz-transition: $val;
	-o-transition: $val;
	-ms-transition: $val;
	transition: $val;
}

@mixin border-box{
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	-ms-box-sizing: border-box;
	box-sizing: border-box;
	*behavior: url(assets/js/boxsizing.htc);
}

@mixin hyphens($val){
	-moz-hyphens: $val;
	-webkit-hyphens: $val;
	hyphens: $val;
}

@mixin gradient($color1, $color2, $type:''){
	@if($type == vertical){
		background: $color1;
		background: -moz-linear-gradient(top,  $color1 0%, $color2 100%);
		background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$color1), color-stop(100%,$color2));
		background: -webkit-linear-gradient(top,  $color1 0%,$color2 100%);
		background: -o-linear-gradient(top,  $color1 0%,$color2 100%);
		background: -ms-linear-gradient(top,  $color1 0%,$color2 100%);
		background: linear-gradient(to bottom,  $color1 0%,$color2 100%);
		filter: 	progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$color1}', endColorstr='#{$color2}',GradientType=0);
	}@else if($type == radial){
		background: $color1;
		background: -moz-radial-gradient(center, ellipse cover,  $color1 0%, $color2 100%);
		background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%,$color1), color-stop(100%,$color2));
		background: -webkit-radial-gradient(center, ellipse cover,  $color1 0%,$color2 100%);
		background: -o-radial-gradient(center, ellipse cover,  $color1 0%,$color2 100%);
		background: -ms-radial-gradient(center, ellipse cover,  $color1 0%,$color2 100%);
		background: radial-gradient(ellipse at center,  $color1 0%,$color2 100%);
		filter: 	progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$color1}', endColorstr='#{$color2}',GradientType=1);
	}@else{
		background: $color1;
		background: -moz-linear-gradient(left, $color1 0%, $color2 100%);
		background: -webkit-gradient(linear, left top, right top, color-stop(0%,$color1), color-stop(100%,$color2));
		background: -webkit-linear-gradient(left, $color1 0%,$color2 100%);
		background: -o-linear-gradient(left, $color1 0%,$color2 100%);
		background: -ms-linear-gradient(left, $color1 0%,$color2 100%);
		background: linear-gradient(right, $color1 0%,$color2 100%);
		filter: 	progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$color1}', endColorstr='#{$color2}',GradientType=1);
	}
}

@mixin font-face($family, $url){
	@font-face{
		font-family: $family;
		src: url($url + '.eot');
		src: url($url + '.eot?#iefix') format('embedded-opentype'),
			 url($url + '.woff') format('woff'),
			 url($url + '.ttf') format('truetype'),
			 url($url + '.svg#' + $family) format('svg');
		font-weight: normal;
		font-style: normal;
	}
}

@mixin cssTriangle($size, $color, $direction){
	content: "";
	display: block;
	width: 0;
	height: 0;
	border: solid $size;
	@if($direction == top){
		border-color: $color transparent transparent transparent;
	}@else if($direction == bottom){
		border-color: transparent transparent $color transparent;
	}@else if($direction == left){
		border-color: transparent transparent transparent $color;
	}@else if($direction == right){
		border-color: transparent $color transparent transparent;
	}
}
